library(tidyverse)
library(mlr)
data(iris)
## Define the task:
task <- makeClassifTask(id="tutorial", data=iris, target="Species")
print(task)
## Define the learner:
lrn = makeLearner("classif.lda")
print(lrn)
## Define the resampling strategy:
rdesc <- makeResampleDesc(method = "CV", stratify = TRUE)
## Do the resampling:
r <- resample(learner = lrn, task = task, resampling = rdesc)
print(r)
## Get the mean misclassification error:
r$aggr
## Get the mean misclassification error:
r$aggr
## Define the task:
task <- makeClassifTask(id="tutorial", data=iris, target="Species")
## Define the learner:
lrn <- makeLearner("classif.naiveBayes")
## Define the learner:
lrn <- makeLearner("classif.naiveBayes")
print(lrn)
## Define the resampling strategy:
rdesc <- makeResampleDesc(method="CV", stratify=TRUE)
## Do the resampling:
r <- resample(learner=lrn, task=task, resampling=rdesc)
## Get the mean misclassification error:
r$aggr
library(tidyverse)
library(mlr)
data(iris)
library(tidyverse)
library(mlr)
data(iris)
## Define the task:
task <- makeClassifTask(id="tutorial", data=iris, target="Species")
print(task)
## Define the learner:
lrn <- makeLearner("classif.naiveBayes")
print(lrn)
## Define the resampling strategy:
rdesc <- makeResampleDesc(method="CV", stratify=TRUE)
## Do the resampling:
r <- resample(learner=lrn, task=task, resampling=rdesc)
print(r)
## Get the mean misclassification error:
r$aggr
print("<3")
bach <- read.csv("/home/oscarsouth/haskellProjects/theHarmonicAlgorithm/data/jsbach_chorals_harmony.data")
bach
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
bach <- read.csv("/home/oscarsouth/haskellProjects/theHarmonicAlgorithm/data/jsbach_chorals_harmony.data")
bach
bach
bach <- read.csv("/home/oscarsouth/haskellProjects/theHarmonicAlgorithm/data/jsbach_chorals_harmony.data")
bach
library("tidyverse")
bach <- as_tibble("/home/oscarsouth/haskellProjects/theHarmonicAlgorithm/data/jsbach_chorals_harmony.data")
bach
bach <- as_tibble("/home/oscarsouth/haskellProjects/theHarmonicAlgorithm/data/jsbach_chorals_harmony.data")
bach
bach <- as_tibble("../jsbach_chorals_harmony.data")
bach
bach <- read_csv("../jsbach_chorals_harmony.data")
source('~/haskellProjects/theHarmonicAlgorithm/data/rScripts/explore.R', echo=TRUE)
source('~/haskellProjects/theHarmonicAlgorithm/data/rScripts/explore.R', echo=TRUE)
bach
bach$pitch
